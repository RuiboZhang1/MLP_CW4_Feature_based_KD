datasets:
  pascal_voc:
    name: &dataset_name 'pascal_voc2012'
    type: 'VOCSegmentation'
    root: &root_dir './resource/dataset'
    splits:
      train:
        dataset_id: &pascal_train !join [*dataset_name, '/train']
        params:
          root: *root_dir
          image_set: 'train'
          year: '2012'
          download: True
          transforms_compose_cls: 'CustomCompose'
          transforms_params:
            - type: 'CustomRandomResize'
              params:
                min_size: 256
                max_size: 1026
            - type: 'CustomRandomHorizontalFlip'
              params:
                p: 0.5
            - type: 'CustomRandomCrop'
              params:
                size: 513
            - type: 'CustomToTensor'
              params:
            - &normalize
              type: 'CustomNormalize'
              params:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
      val:
        dataset_id: &pascal_val !join [*dataset_name, '/val']
        params:
          root: *root_dir
          image_set: 'val'
          year: '2012'
          download: True
          transforms_compose_cls: 'CustomCompose'
          transforms_params: &val_transform
            - type: 'CustomRandomResize'
              params:
                min_size: 513
                max_size: 513
            - type: 'CustomToTensor'
              params:
            - *normalize
      test:
        dataset_id: &pascal_test !join [*dataset_name, '/test']
        params:
          root: *root_dir
          image_set: 'val'
          year: '2012'
          download: True
          transforms_compose_cls: 'CustomCompose'
          transforms_params: *val_transform

models:
  model:
    name: &student_model_name 'deeplabv3_resnet50'
    params:
      pretrained: True
      pretrained_backbone: True
      num_classes: 21
      aux_loss: True
    experiment: &student_experiment !join [*dataset_name, '-', *student_model_name]
    ckpt: !join ['./resource/ckpt/pascal_voc2012/ce/', *student_experiment, '.pt']

train:
  log_freq: 1000
  num_epochs: &num_epochs 30
  train_data_loader:
    dataset_id: *pascal_train
    random_sample: True
    num_workers: 16
    batch_size: 16
    collate_fn: 'coco_seg_collate_fn'
    drop_last: True
    cache_output:
  val_data_loader:
    dataset_id: *pascal_val
    random_sample: False
    batch_size: 1
    num_workers: 16
    collate_fn: 'coco_seg_eval_collate_fn'
  model:
    adaptations:
    sequential: []
    forward_hook:
      input: []
      output: []
    wrapper: 'DistributedDataParallel'
    requires_grad: True
    frozen_modules: []
  optimizer:
    type: 'SGD'
    params:
      lr: 0.001
      momentum: 0.9
      weight_decay: 0.0001
    module_wise_params:
      - module: 'backbone'
        params: {}
      - module: 'classifier'
        params: {}
      - module: 'aux_classifier'
        params:
          lr: 0.01
  scheduler:
    type: 'poly_lr_scheduler'
    params:
      num_iterations: None
      num_epochs: *num_epochs
      power: 0.9
    scheduling_step: 1
  criterion:
    type: 'GeneralizedCustomLoss'
    func2extract_org_loss: 'extract_simple_org_loss_dict'
    org_term:
      criterion:
        type: 'CrossEntropyLoss'
        params:
          reduction: 'mean'
          ignore_index: 255
      factor:
        out: 1.0
        aux: 0.5
    sub_terms:

test:
  test_data_loader:
    dataset_id: *pascal_test
    random_sample: False
    batch_size: 1
    num_workers: 16
    collate_fn: 'coco_seg_eval_collate_fn'